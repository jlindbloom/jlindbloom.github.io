{"title":"Research","markdown":{"yaml":{"title":"Research","echo":false,"jupyter":"python3","section-divs":false,"keep-md":true},"headingText":"Me","containsRefs":false,"markdown":"\n\n```{python}\nimport yaml\nfrom IPython.display import display, Markdown, HTML\n\nme = \"Jonathan Lindbloom\"\n\n# This code is adapted from Drew Dimmery's post: https://ddimmery.com/posts/quarto-website/\n\ndef readable_list(_s):\n    \"\"\"Makes a list of names into a readable list.\n    \"\"\"\n    if len(_s) < 3:\n        return ' and '.join(map(str, _s))\n    *a, b = _s\n    return f\"{', '.join(map(str, a))}, and {b}\"\n\n\ndef button(url, str, icon):\n    \"\"\"Builds the HTML for a button.\n    \"\"\"\n    icon_base = icon[:2]\n\n    return f\"\"\"<a href=\"{url}\" class=\"btn btn-outline-info btn-sm\" role=\"button\" target=\"_blank\"> <i class=\"{icon_base} {icon}\" role='img'></i>{\"   \"+str}</a>\"\"\"\n\n\ndef space_between_buttons(buttons):\n    \"\"\"Adds space between the buttons.\n    \"\"\"\n    if len(buttons) > 1:\n        new_buttons = []\n        for j, item in enumerate(buttons):\n            if j > 0:\n                item = \"&nbsp; \" + item\n            else:\n                pass\n            new_buttons.append(item)\n        return new_buttons\n    else:\n        return buttons\n\n\n# Load all data\ntalks_data = yaml.safe_load(open(\"talks.yaml\"))\ntechnical_articles_data = yaml.safe_load(open(\"technical_articles.yaml\"))\n\n# Dict for storing all info\npub_strs = {\n    \"talks\": [],\n    \"technical_articles\": [],\n}\n\n# Iterate over talks\nfor _, data in talks_data.items():\n\n    # Required attributes\n    talk_title = data[\"title\"]\n    date = data[\"date\"]\n    venue = data[\"venue\"]\n    location = data[\"location\"]\n\n    # Make talk title stronger\n    talk_title = f\"\"\"<strong>{talk_title}.</strong><br>\"\"\"\n    \n    # Talk string\n    talk_str = f\"{talk_title} {venue}. {location}. {date}.\"\n\n    # Copresenters\n    copresenters = data.get(\"copresenters\")\n    if copresenters is None:\n        pass\n    else:\n        copresenters = readable_list(copresenters)\n        talk_str += f\"\"\"<br><i>Copresenters: {copresenters}.</i>\"\"\"\n\n    # List for storing buttons\n    buttons = []\n\n    # If we have slides, add a button\n    slides_link = data.get(\"slides_link\")\n    if slides_link is not None:\n        buttons.append(button(slides_link, \"&nbsp; Slides\", \"bi-file-earmark-pdf\"))\n\n    # If we have a video, add the link\n    video_link = data.get(\"video_link\")\n    if video_link is not None:\n        buttons.append(button(video_link, \"&nbsp; Video\", \"bi bi-camera-video\"))\n\n    # Now add space between buttons\n    buttons = space_between_buttons(buttons)\n\n    # Now add the talk to the dict\n    pub_strs[\"talks\"].append(\n        talk_str + \"\"\"<p style=\"margin-bottom:0.2cm;\"></p>\"\"\" + \" \".join(buttons)\n        #\"<li class='list-group-item'>\" + talk_str + \"<br>\" + \" \".join(buttons) + \"</li>\"\n    )\n\n# Iterate over technical articles\nfor _, data in technical_articles_data.items():\n\n    # Required attributes\n    article_title = data[\"title\"]\n    date = data[\"date\"]\n    \n    # Make talk title stronger\n    article_title = f\"\"\"<strong>{article_title}.</strong><br>\"\"\"\n    \n    # Make author string\n    authors = data.get(\"authors\")\n    if authors is None:\n        pass\n    else:\n        author_list = []\n        for author in authors:\n            author_list.append(author)\n\n        authors = readable_list(authors)\n\n    # Article string\n    article_str = f\"{article_title} {authors}.\"\n\n    # Add venue\n    venue = data.get(\"venue\")\n    if venue is None:\n        pass\n    else:\n        article_str += f\" {venue}.\"\n\n    # Add date\n    article_str += f\" {date}.\"\n\n    # List for storing buttons\n    buttons = []\n\n    # If we have a url, add the link\n    url = data.get(\"url\")\n    if url is not None:\n        buttons.append(button(url, \"&nbsp; Link\", \"bi bi-link-45deg\"))\n\n    # Now add space between buttons\n    buttons = space_between_buttons(buttons)\n\n    # Now add the talk to the dict\n    pub_strs[\"technical_articles\"].append(\n        article_str + \"\"\"<p style=\"margin-bottom:0.2cm;\"></p>\"\"\" + \" \".join(buttons)\n        #\"<li class='list-group-item'>\" + talk_str + \"<br>\" + \" \".join(buttons) + \"</li>\"\n    )\n\n\n```\n\n\n\n\n\n## Talks\n\n```{python}\n#| output: asis\nfor talk_str in pub_strs[\"talks\"]:\n    display(\n        HTML(\n            talk_str\n        )\n    )\n    display(HTML(\"<br> <br>\"))\n\n```\n\n## Technical Articles\n\n```{python}\n#| output: asis\nfor article_str in pub_strs[\"technical_articles\"]:\n    display(\n        HTML(\n            article_str\n        )\n    )\n    display(HTML(\"<br> <br>\"))\n\n```"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":true,"include":true,"keep-md":true,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"section-divs":false,"output-file":"research.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"0.9.577","theme":["superhero","custom.scss"],"title":"Research","jupyter":"python3"},"extensions":{"book":{"multiFile":true}}}}}